<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <title>Nearby Hospitals | HealthCare</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">

  <!-- Leaflet CSS -->
  <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
  <!-- Bootstrap -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Google Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;600&display=swap" rel="stylesheet">

  <style>
    body {
      font-family: 'Open Sans', sans-serif;
      background-color: #f4f7fc;
      padding-top: 70px;
    }

    .navbar {
      background-color: #007bff;
    }

    .navbar a {
      color: white !important;
    }

    .navbar .nav-link.active {
      font-weight: bold;
      text-decoration: underline;
    }

    #map {
      height: 65vh;
      border-radius: 12px;
      box-shadow: 0 4px 10px rgba(0,0,0,0.1);
    }

    .hospital-card {
      background: white;
      padding: 15px;
      border-left: 5px solid #007bff;
      border-radius: 10px;
      margin-bottom: 15px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    .input-group input,
    .input-group button {
      border-radius: 30px;
    }
  </style>
</head>
<body>

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark fixed-top">
  <div class="container-fluid">
    <a class="navbar-brand" href="#">HealthCare</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item">
          <a class="nav-link" href="chatbot.html">🤖 Chatbot</a>
        <li class="nav-item">
          <a class="nav-link" href="Home.html">🏠 Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="about.html">ℹ️ About</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" href="PatientCare.html">Patient Care</a>
        <li class="nav-item">
          <li class="nav-item">
          <a class="nav-link" href="symptoms.html">🩺 Symptoms</a>
        <li class="nav-item">
          <a class="nav-link" href="appointment.html">📅 Appointment</a>
        </li> 
        <li class="nav-item">
          <a class="nav-link" href="locator.html">📍 Locator</a>
        <li class="nav-item">
          <a class="nav-link" href="Contactinfo.html">📍 Contact</a>

        </li>
      </ul>
    </div>
  </div>
</nav>

<!-- Main Content -->
<div class="container">
  <h2 class="text-center text-primary mb-4">🏥 Find Nearby Hospitals</h2>

  <!-- Search & Location Buttons -->
  <div class="row mb-3">
    <div class="col-md-8 mx-auto">
      <div class="input-group">
        <input type="text" id="cityInput" class="form-control" placeholder="Enter city name (e.g., Mumbai)">
        <button class="btn btn-primary" onclick="searchCity()">🔍 Search</button>
        <button class="btn btn-success ms-2" onclick="getUserLocation()">📍 My Location</button>
      </div>
    </div>
  </div>

  <div id="map"></div>

  <h4 class="mt-4 mb-3">📋 Hospital List</h4>
  <div id="hospitalList" class="row"></div>
</div>

<!-- Leaflet JS -->
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<script>
  let map;

  function initMap(lat, lon) {
    if (map) map.remove(); // reset
    map = L.map('map').setView([lat, lon], 13);
    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
      attribution: '© OpenStreetMap contributors'
    }).addTo(map);
  }

  function fetchHospitals(lat, lon) {
    const url = `https://overpass-api.de/api/interpreter?data=[out:json];
      (
        node["amenity"="hospital"](around:5000,${lat},${lon});
        way["amenity"="hospital"](around:5000,${lat},${lon});
        relation["amenity"="hospital"](around:5000,${lat},${lon});
      );
      out center tags;`;

    fetch(url)
      .then(res => res.json())
      .then(data => {
        const hospitalList = document.getElementById("hospitalList");
        hospitalList.innerHTML = "";

        data.elements.forEach(hospital => {
          const name = hospital.tags.name || "Unnamed Hospital";
          const phone = hospital.tags.phone || hospital.tags['contact:phone'] || "Not available";
          const address = [
            hospital.tags['addr:street'],
            hospital.tags['addr:city'],
            hospital.tags['addr:state']
          ].filter(Boolean).join(", ") || "Address not available";

          const lat = hospital.lat || (hospital.center && hospital.center.lat);
          const lon = hospital.lon || (hospital.center && hospital.center.lon);

          // Map Marker
          L.marker([lat, lon]).addTo(map)
            .bindPopup(`<strong>${name}</strong><br>${address}<br>${phone}`);

          // Card
          hospitalList.innerHTML += `
            <div class="col-md-6">
              <div class="hospital-card">
                <h5>${name}</h5>
                <p><strong>Address:</strong> ${address}</p>
                <p><strong>Phone:</strong> ${phone}</p>
              </div>
            </div>
          `;
        });
      })
      .catch(err => {
        alert("Error fetching hospitals. Try again later.");
        console.error(err);
      });
  }

  function getUserLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        pos => {
          const lat = pos.coords.latitude;
          const lon = pos.coords.longitude;
          initMap(lat, lon);
          fetchHospitals(lat, lon);
        },
        err => {
          console.warn("Geolocation error:", err.message);
          alert("Location access denied. Showing Delhi hospitals.");
          const lat = 28.6139, lon = 77.2090;
          initMap(lat, lon);
          fetchHospitals(lat, lon);
        },
        { enableHighAccuracy: true, timeout: 7000 }
      );
    } else {
      alert("Geolocation not supported. Showing Delhi hospitals.");
      const lat = 28.6139, lon = 77.2090;
      initMap(lat, lon);
      fetchHospitals(lat, lon);
    }
  }

  function searchCity() {
    const city = document.getElementById("cityInput").value.trim();
    if (!city) {
      alert("Please enter a city name.");
      return;
    }

    fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(city)}`)
      .then(res => res.json())
      .then(data => {
        if (data.length === 0) {
          alert("City not found.");
          return;
        }
        const { lat, lon } = data[0];
        initMap(lat, lon);
        fetchHospitals(lat, lon);
      })
      .catch(err => {
        alert("Error fetching location data.");
        console.error(err);
      });
  }

  // Auto-load user location
  window.onload = getUserLocation;
</script>

</body>
</html>
